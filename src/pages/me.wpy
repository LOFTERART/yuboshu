<style lang="less" scoped>
.info {
  display: flex;
  align-items: center;
  text-align: left;
  line-height: normal;
  width: 100%;
  padding: 20rpx 30rpx;
  border-radius: 0px;
  box-sizing: border-box;
  &::after {
    border: none;
  }
  .avtater {
    image {
      width: 120rpx;
      height: 120rpx;
      border-radius: 120rpx;
    }
  }
  .content {
    flex-grow: 1;
    margin-left: 20rpx;
    .nick {
      font-size: 40rpx;
      font-weight: bold;
    }
    .des {
      font-size: 28rpx;
      margin-top: 8rpx;
      .label {
        color: #b2b2b2;
        margin-right: 12rpx;
      }
      .value {
        color: #000;
        margin-right: 30rpx;
      }
    }
  }
  .right {
    display: flex;
    align-items: center;
    font-size: 30rpx;
    color: #888888;
    .login-txt {
      color: #e6a23c;
    }
  }
}
.tool {
  margin: 30rpx;
  background: #fff;
  padding: 30rpx;
  display: flex;
  align-items: center;
  border-radius: 20rpx;
  .item {
    flex-grow: 1;
    text-align: center;
    .value {
      font-size: 32rpx;
      font-weight: bold;
      margin-bottom: 8rpx;
      &.rank {
        font-weight: normal;
        font-size: 28rpx;
        color: #e6a23c;
      }
    }
    .label {
      font-size: 24rpx;
      color: #b2b2b2;
    }
  }
}
swiper {
  margin: 20rpx 0rpx;
  background: #ffffff;
  height: 290rpx;
}
.cells {
  padding: 20rpx 0rpx;
  background: #ffffff;
  button {
    text-align: left;
    &::after {
      border: none;
    }
  }
  .cell {
    display: flex;
    align-items: center;
    background: #ffffff;
    padding: 20rpx 40rpx;
    &.cell-hover {
      background: #f8f8f8;
    }
    .left {
      flex-grow: 1;
      .title {
        font-size: 36rpx;
        line-height: 36rpx;
      }
      .des {
        font-size: 24rpx;
        color: #b2b2b2;
      }
    }
    .right {
      display: flex;
      align-items: center;
      color: #b2b2b2;
      .value {
        font-size: 28rpx;
      }
      .auth{
        font-size: 26rpx;
        color: red;
      }
    }
  }
}
</style>
<template>
  <div class="container">
    <div class="info" @tap="goHomPage" v-if="hasBinding">
      <div class="avtater">
        <img :src="user.avtater" />
      </div>
      <div class="content">
        <div class="nick">{{user.nick}}</div>
        <div class="des">
          <text>
            <text class="label">关注</text>
            <text class="value">{{user.followNum}}</text>
          </text>
          <text>
            <text class="label">粉丝</text>
            <text class="value">{{user.fansNum}}</text>
          </text>
        </div>
      </div>
      <div class="right">
        <div>个人主页</div>
        <div class="icon icon-arrow-right"></div>
      </div>
    </div>
    <button @tap.stop="goGender" class="info" v-else>
      <div class="avtater">
        <img src="../images/avtater_empty.svg" />
      </div>
      <div class="content">
        <div class="nick">未登录</div>
        <div class="des">登录后可编辑个人资料</div>
      </div>
      <div class="right">
        <div class="login-txt">{{isqq ? '点击QQ授权' : '点击微信授权'}}</div>
        <div class="icon icon-arrow-right"></div>
      </div>
    </button>
    <div class="tool">
      <div class="item" @tap="goRank">
        <div class="value rank">NO.{{rank}}</div>
        <div class="label">达人排名</div>
      </div>
      <div class="item">
        <div class="value">{{user.thumbsNum}}</div>
        <div class="label">获赞</div>
      </div>
      <div class="item" @tap="goMeans">
        <div class="value">{{user.converScore || '0.00'}}</div>
        <div class="label">总资产</div>
      </div>
      <div class="item" @tap="goFans(user.id, 1)">
        <div class="value">{{user.score}}</div>
        <div class="label">玉帛贝</div>
      </div>
    </div>
    <div class="cells">
      <button class="cell" @tap="goEdit">
        <div class="left">
          <div class="title">编辑信息</div>
          <div class="des">完善个人信息让更多同学了解你</div>
        </div>
        <div class="right">
          <div class="icon icon-arrow-right"></div>
        </div>
      </button>
      <button class="cell" @tap="goSchool" v-if="!user.isAuth">
        <div class="left">
          <div class="title">学生认证</div>
          <div class="des">学生认证后可解锁更多特权</div>
        </div>
        <div class="right">
          <div class="auth">未认证</div>
          <div class="icon icon-arrow-right"></div>
        </div>
      </button>
      <button
        class="cell"
        open-type="{{isqq ? 'openGroupProfile' : 'contact'}}"
        group-id="1006532345"
      >
        <div class="left">
          <div class="title">帮助与反馈</div>
          <div class="des">投稿,帮助,疑问都可以点击这里</div>
        </div>
        <div class="right">
          <!-- <div class="value">0</div> -->
          <div class="icon icon-arrow-right"></div>
        </div>
      </button>
      <button class="cell" open-type="feedback">
        <div class="left">
          <div class="title">意见反馈</div>
          <div class="des">你的意见和建议,是对我们最大的支持</div>
        </div>
        <div class="right">
          <div class="icon icon-arrow-right"></div>
        </div>
      </button>
      <button class="cell" open-type="share">
        <div class="left">
          <div class="title">分享小程序</div>
          <div class="des">觉得好玩,就分享给你身边的同学吧</div>
        </div>
        <div class="right">
          <div class="icon icon-arrow-right"></div>
        </div>
      </button>
    </div>
  </div>
</template>
<script>
import { User, Follow } from '../common/api';
import wepy from '@wepy/core';
import shareMixin from '../common/share.js';
wepy.page({
  mixins: [shareMixin],
  data: {
    user: null,
    hasBinding: true,
    isqq: false,
    rank: '--'
  },
  async onLoad() {
    wx.setNavigationBarTitle({
      title: ''
    });
    this.isqq = User.isQQ();
    this.rank = await Follow.getUserRank();
  },
  onShow() {
    this.user = wx.getStorageSync('user');
    this.user.converScore = (
      (this.user.converScore + this.user.score) /
      100
    ).toFixed(2);
    this.hasBinding = this.user.isBinding;
  },
  methods: {
    goHomPage() {
      wx.navigateTo({
        url: `/pages/user-details?id=${this.user.id}`
      });
    },
    goUserNew() {
      wx.navigateTo({
        url: '/pages/user-new'
      });
    },
    goMeans() {
      wx.navigateTo({
        url: '/pages/means'
      });
    },
    goGender() {
      this.user = wx.getStorageSync('user');
      if (!this.user.isBinding) {
        wx.navigateTo({
          url: '/pages/gender'
        });
        return;
      }
    },
    onOpensetting(res) {
      console.log(res);
    },
    goSchool() {
      wx.navigateTo({
        url: '/pages/user-school'
      });
    },
    goEdit() {
      wx.navigateTo({
        url: '/pages/user-edit'
      });
    },
    async bindingUserInfo(info) {
      if (info.$wx.detail.userInfo) {
        const {
          nickName,
          gender,
          avatarUrl,
          province,
          city
        } = info.$wx.detail.userInfo;
        const res = await bindInfo(nickName, avatarUrl, gender, province, city);
        if (res === -1) {
          wx.showToast({
            title: '登录失败,重试',
            icon: 'none',
            duration: 2000
          });
        } else {
          this.user = wx.getStorageSync('user');
          this.hasBinding = true;
        }
      } else {
        wx.showToast({
          title: '取消授权,无法登录',
          icon: 'none',
          duration: 2000
        });
      }
    },
    goFans(userId, type) {
      wx.navigateTo({
        url: `/pages/fans?type=${type}&userId=${userId}`
      });
    },
    goRank() {
      wx.navigateTo({
        url: '/pages/rank'
      });
    }
  }
});
</script>
<config>
{
    navigationBarTitleText: '',
    "usingComponents": {
       
    }
}
</config>