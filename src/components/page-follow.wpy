<style lang="less" scoped>
.follow-empty {
  padding: 20rpx;
  background: rgba(255, 209, 0, 0.1);
  .title {
    font-weight: bold;
    color: #474747;
    font-size: 30rpx;
  }
  .empty-content {
    background: url(http://img.wutuobangxinyougou.com/topic_empty.svg) no-repeat;
    background-size: 30% 100%;
    background-position: 100% 100%;
    font-size: 28rpx;
    padding: 30rpx;
    text-align: left;
    color: #7a8299;
    line-height: 45rpx;
  }
}
.list {
  .title {
    display: flex;
    justify-content: center;
    align-items: center;
    background: #fff;
    text-align: center;
    color: #b2b2b2;
    padding: 30rpx;
    font-size: 28rpx;
    .des {
      margin: 0rpx 10rpx;
    }
    .line {
      height: 1px;
      background: #f1f1f1;
      width: 100rpx;
    }
  }
}
</style>
<template>
  <mp-page
    :enableRefresh="true"
    ref="list"
    :count="count"
    :state="state"
    :showMoreLoading="hasMore"
    @scrolltolower="onScrolltolower"
    @retry="onRetry"
    @refresh="onRefresh"
  >
    <block v-if="items.length">
      <user-recommend />
      <post-item v-for="item in items" :key="item.id" :item="item" :showBtnFollow="false" />
    </block>
    <block v-else>
      <scroll-view :scroll-y="true" slot="empty" style="height:100%;">
        <div class="follow-empty">
          <div class="empty-content">
            <div class="title">你还没有关注的人哦,</div>
            <div>已经关注了？别着急，他们也许最近忙考试呢</div>
          </div>
        </div>
        <div class="list">
          <div class="title">
            <div class="line"></div>
            <div class="des">为你推荐了10条动弹</div>
            <div class="line"></div>
          </div>
          <post-item v-for="item in recommentds" :key="item.id" :item="item" />
        </div>
      </scroll-view>
    </block>
  </mp-page>
</template>
<script>
import wepy from '@wepy/core';
import { Post } from '../common/api';
wepy.component({
  data: {
    count: 0,
    state: 0,
    pageIndex: 1,
    pageSize: 5,
    items: [],
    recommentds: [],
    isLoadData: false,
    hasMore: true,
    refreshDate: new Date(),
    loadDate: new Date()
  },
  methods: {
    async init() {
      this.state = 0;
      this.pageIndex = 1;
      this.loadDate = new Date();
      this.items = [];
      let res = await Post.follow(this.loadDate, 1, 1, this.pageSize);
      if (res) {
        if (res.length > 0) {
          this.items = res;
          this.pageIndex++;
          this.hasMore = res.length === this.pageSize;
          this.state = 3;
        } else {
          res = await Post.followRecommend();
          if (res) {
            this.recommentds = res;
            this.state = 2;
          } else {
            this.state = 1;
          }
        }
      } else {
        this.state = 1;
      }
    },
    async loadData(direction) {
      if (this.isLoadData) {
        return;
      }
      this.isLoadData = true;
      if (direction === 1) {
        if (this.hasMore) {
          const res = await Post.follow(
            this.loadDate,
            1,
            this.pageIndex,
            this.pageSize
          );
          if (res) {
            for (const item of res) {
              this.items.push(item);
            }
            this.pageIndex++;
            this.hasMore = res.length === this.pageSize;
          }
        }
      } else {
        const res = await Post.follow(this.refreshDate, 0, 1, this.pageSize);
        if (res) {
          this.count = res.length;
          for (const item of res) {
            this.items.unshift(item);
          }
        }
        this.refreshDate = new Date();
      }
      this.isLoadData = false;
    },
    async onScrolltolower() {
      await this.loadData(1);
    },
    async onRetry() {
      await this.init();
    },
    async onRefresh() {
      await this.loadData(0);
      this.$refs.list.hideRefresh();
    }
  }
});
</script>
<config>
{
    usingComponents: {
        "mp-page": "./mp-page",
        "post-item": "./post-item",
        "user-recommend": "./user-recommend"
    }
}
</config>